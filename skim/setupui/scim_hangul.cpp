// This file is generated by kconfig_compiler from scim_hangul.kcfg.
// All changes you do to this file will be lost.

#include "scim_hangul.h"

#include <kstaticdeleter.h>

ScimHangulConfig *ScimHangulConfig::mSelf = 0;
static KStaticDeleter<ScimHangulConfig> staticScimHangulConfigDeleter;

ScimHangulConfig *ScimHangulConfig::self()
{
  if ( !mSelf ) {
    staticScimHangulConfigDeleter.setObject( mSelf, new ScimHangulConfig() );
    mSelf->readConfig();
  }

  return mSelf;
}

ScimHangulConfig::ScimHangulConfig(  )
  : KConfigSkeleton( QString::fromLatin1( "skimrc" ) )
{
  mSelf = this;
  setCurrentGroup( QString::fromLatin1( "SCIM" ) );

  KConfigSkeleton::ItemBool  *item_IMEngine_Hangul_ShowCandidateComment;
  item_IMEngine_Hangul_ShowCandidateComment = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "/IMEngine/Hangul/ShowCandidateComment" ), m_IMEngine_Hangul_ShowCandidateComment, true );
  addItem( item_IMEngine_Hangul_ShowCandidateComment, QString::fromLatin1( "_IMEngine_Hangul_ShowCandidateComment" ) );
  KConfigSkeleton::ItemBool  *item_IMEngine_Hangul_UseAsciiMode;
  item_IMEngine_Hangul_UseAsciiMode = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "/IMEngine/Hangul/UseAsciiMode" ), m_IMEngine_Hangul_UseAsciiMode, false );
  addItem( item_IMEngine_Hangul_UseAsciiMode, QString::fromLatin1( "_IMEngine_Hangul_UseAsciiMode" ) );
  KConfigSkeleton::ItemBool  *item_IMEngine_Hangul_CommitByWord;
  item_IMEngine_Hangul_CommitByWord = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "/IMEngine/Hangul/ShowCandidateComment" ), m_IMEngine_Hangul_CommitByWord, false );
  addItem( item_IMEngine_Hangul_CommitByWord, QString::fromLatin1( "_IMEngine_Hangul_CommitByWord" ) );
  KConfigSkeleton::ItemString  *item_IMEngine_Hangul_KeyboardLayout;
  item_IMEngine_Hangul_KeyboardLayout = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "/IMEngine/Hangul/KeyboardLayout" ), m_IMEngine_Hangul_KeyboardLayout, QString::fromLatin1( "2" ) );
  addItem( item_IMEngine_Hangul_KeyboardLayout, QString::fromLatin1( "_IMEngine_Hangul_KeyboardLayout" ) );
  KConfigSkeleton::ItemString  *item_IMEngine_Hangul_HangulKey;
  item_IMEngine_Hangul_HangulKey = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "/IMEngine/Hangul/HangulKey" ), m_IMEngine_Hangul_HangulKey, QString::fromLatin1( "Hangul,Shift+space" ) );
  addItem( item_IMEngine_Hangul_HangulKey, QString::fromLatin1( "_IMEngine_Hangul_HangulKey" ) );
  KConfigSkeleton::ItemString  *item_IMEngine_Hangul_HangulHanjaKey;
  item_IMEngine_Hangul_HangulHanjaKey = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "/IMEngine/Hangul/HanjaKey" ), m_IMEngine_Hangul_HangulHanjaKey, QString::fromLatin1( "Hangul_Hanja,F9" ) );
  addItem( item_IMEngine_Hangul_HangulHanjaKey, QString::fromLatin1( "_IMEngine_Hangul_HangulHanjaKey" ) );
  KConfigSkeleton::ItemString  *item_IMEngine_Hangul_HanjaModeKey;
  item_IMEngine_Hangul_HanjaModeKey = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "/IMEngine/Hangul/HanjaModeKey" ), m_IMEngine_Hangul_HanjaModeKey );
  addItem( item_IMEngine_Hangul_HanjaModeKey, QString::fromLatin1( "_IMEngine_Hangul_HanjaModeKey" ) );
}

ScimHangulConfig::~ScimHangulConfig()
{
  if ( mSelf == this )
    staticScimHangulConfigDeleter.setObject( mSelf, 0, false );
}

